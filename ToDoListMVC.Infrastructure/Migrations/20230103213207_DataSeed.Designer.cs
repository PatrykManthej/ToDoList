// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoListMVC.Infrastructure;

#nullable disable

namespace ToDoListMVC.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230103213207_DataSeed")]
    partial class DataSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToDoListMVC.Domain.Model.ToDoList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ToDoLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "TestList1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "TestList2"
                        });
                });

            modelBuilder.Entity("ToDoListMVC.Domain.Model.ToDoTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ToDoListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ToDoListId");

                    b.ToTable("ToDoTasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "FirstTaskDescription",
                            IsCompleted = false,
                            Name = "FirstTaskWithoutDate",
                            ToDoListId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "SecondTaskDescription",
                            DueDate = new DateTime(2023, 1, 5, 22, 32, 7, 386, DateTimeKind.Local).AddTicks(6668),
                            IsCompleted = false,
                            Name = "SecondTaskWithDate",
                            ToDoListId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "TaskDescription",
                            IsCompleted = true,
                            Name = "ThirdTask",
                            ToDoListId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "TaskDescription",
                            DueDate = new DateTime(2023, 1, 6, 22, 32, 7, 386, DateTimeKind.Local).AddTicks(6702),
                            IsCompleted = false,
                            Name = "FourthTask",
                            ToDoListId = 2
                        });
                });

            modelBuilder.Entity("ToDoListMVC.Domain.Model.ToDoTask", b =>
                {
                    b.HasOne("ToDoListMVC.Domain.Model.ToDoList", "ToDoList")
                        .WithMany("ToDoTasks")
                        .HasForeignKey("ToDoListId");

                    b.Navigation("ToDoList");
                });

            modelBuilder.Entity("ToDoListMVC.Domain.Model.ToDoList", b =>
                {
                    b.Navigation("ToDoTasks");
                });
#pragma warning restore 612, 618
        }
    }
}

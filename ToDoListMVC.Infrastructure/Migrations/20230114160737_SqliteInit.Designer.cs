// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoListMVC.Infrastructure;

#nullable disable

namespace ToDoListMVC.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230114160737_SqliteInit")]
    partial class SqliteInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("ToDoListMVC.Domain.Model.ToDoList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ToDoLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "TestList1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "TestList2"
                        });
                });

            modelBuilder.Entity("ToDoListMVC.Domain.Model.ToDoTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Notify")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ToDoListId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ToDoListId");

                    b.ToTable("ToDoTasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "FirstTaskDescription",
                            IsCompleted = false,
                            Name = "FirstTaskWithoutDate",
                            Notify = true,
                            ToDoListId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "SecondTaskDescription",
                            DueDate = new DateTime(2023, 1, 16, 17, 7, 37, 520, DateTimeKind.Local).AddTicks(6083),
                            IsCompleted = false,
                            Name = "SecondTaskWithDate",
                            Notify = true,
                            ToDoListId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "TaskDescription",
                            IsCompleted = true,
                            Name = "ThirdTask",
                            Notify = false,
                            ToDoListId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "TaskDescription",
                            DueDate = new DateTime(2023, 1, 15, 17, 7, 37, 520, DateTimeKind.Local).AddTicks(6143),
                            IsCompleted = false,
                            Name = "FourthTask",
                            Notify = true,
                            ToDoListId = 2
                        });
                });

            modelBuilder.Entity("ToDoListMVC.Domain.Model.ToDoTask", b =>
                {
                    b.HasOne("ToDoListMVC.Domain.Model.ToDoList", "ToDoList")
                        .WithMany("ToDoTasks")
                        .HasForeignKey("ToDoListId");

                    b.Navigation("ToDoList");
                });

            modelBuilder.Entity("ToDoListMVC.Domain.Model.ToDoList", b =>
                {
                    b.Navigation("ToDoTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
